{
    "openapi": "3.0.0",
    "info": {
        "title": "Karya Tani Shop API",
        "description": "Karya Tani Shop API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/api/address": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get User Address",
                "description": "Retrieve the address of the authenticated user",
                "operationId": "getAddress",
                "responses": {
                    "200": {
                        "description": "Address retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "description": "The user ID",
                                            "type": "integer"
                                        },
                                        "alamat": {
                                            "description": "User's address",
                                            "type": "string"
                                        },
                                        "kota": {
                                            "description": "City",
                                            "type": "string"
                                        },
                                        "provinsi": {
                                            "description": "Province",
                                            "type": "string"
                                        },
                                        "kecamatan": {
                                            "description": "District",
                                            "type": "string"
                                        },
                                        "kelurahan": {
                                            "description": "Subdistrict",
                                            "type": "string"
                                        },
                                        "kode_pos": {
                                            "description": "Postal code",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Address"
                ],
                "summary": "Update User Address",
                "description": "Update the address of the authenticated user",
                "operationId": "updateAddress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "alamat": {
                                        "description": "User's address",
                                        "type": "string"
                                    },
                                    "kota": {
                                        "description": "City",
                                        "type": "string"
                                    },
                                    "provinsi": {
                                        "description": "Province",
                                        "type": "string"
                                    },
                                    "kecamatan": {
                                        "description": "District",
                                        "type": "string"
                                    },
                                    "kelurahan": {
                                        "description": "Subdistrict",
                                        "type": "string"
                                    },
                                    "kode_pos": {
                                        "description": "Postal code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address updated successfully"
                                        },
                                        "address": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, validation error"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nama": {
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully. Please verify your email."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your.jwt.token"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP for email verification",
                "operationId": "8d451369bebcf6d82f35d85565bb3e52",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "email@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your.jwt.token"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/otp-request/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Request OTP for password reset",
                "operationId": "f315f89cf4bc0397f57651cfab526acf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent to email for password reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent to email for password reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Failed to send OTP"
                    }
                }
            }
        },
        "/api/auth/otp-verify/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Verify OTP for password reset",
                "operationId": "cf954d10c808eb4205a839975ad31adf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully, you can reset your password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset password",
                "operationId": "6af92e090f994419a2295111b391a205",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password successfully reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get user's cart items",
                "operationId": "0652f94dde92e36bbb3c461356ce1d7b",
                "responses": {
                    "200": {
                        "description": "List of items in the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItemKeranjang"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Keranjang tidak ditemukan"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "operationId": "8a051e160148a408fe92e1f8da586aab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "produk_id",
                                    "kuantitas"
                                ],
                                "properties": {
                                    "produk_id": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "kuantitas": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Produk berhasil ditambahkan ke keranjang",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemKeranjang"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/update/{item_id}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update item quantity in cart",
                "operationId": "01375706094fc24ab6ef56a98f0b22c7",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "kuantitas"
                                ],
                                "properties": {
                                    "kuantitas": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Produk berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemKeranjang"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item tidak ditemukan"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/remove/{item_id}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "operationId": "96f275b70a5f251eb44ef6c14eb38a52",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produk berhasil dihapus dari keranjang"
                    },
                    "404": {
                        "description": "Item tidak ditemukan"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Kategori"
                ],
                "summary": "Menampilkan semua kategori",
                "description": "Menampilkan daftar semua kategori yang ada.",
                "operationId": "c9b775e0703ee946ef03300fd4819f65",
                "responses": {
                    "200": {
                        "description": "Daftar kategori berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Kategori"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Kategori"
                ],
                "summary": "Membuat kategori baru",
                "description": "Membuat kategori baru dengan data yang diberikan.",
                "operationId": "25c4a53a6d150741a8754140c3787242",
                "requestBody": {
                    "description": "Data untuk kategori baru",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_kategori"
                                ],
                                "properties": {
                                    "nama_kategori": {
                                        "description": "Nama kategori",
                                        "type": "string",
                                        "example": "Elektronik"
                                    },
                                    "deskripsi_kategori": {
                                        "description": "Deskripsi kategori",
                                        "type": "string",
                                        "example": "Kategori untuk produk elektronik"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kategori berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "123e4567-e89b-12d3-a456-426614174000"
                                        },
                                        "nama_kategori": {
                                            "type": "string",
                                            "example": "Elektronik"
                                        },
                                        "deskripsi_kategori": {
                                            "type": "string",
                                            "example": "Kategori untuk produk elektronik"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-25T10:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-25T10:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Data yang diberikan tidak valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "nama_kategori": [
                                                    "Nama kategori wajib diisi"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Kategori"
                ],
                "summary": "Menampilkan kategori berdasarkan ID",
                "description": "Menampilkan detail kategori berdasarkan ID.",
                "operationId": "c6425c926cede1d69371906173948a37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID kategori",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kategori berhasil ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kategori"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kategori tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Kategori"
                ],
                "summary": "Mengupdate kategori berdasarkan ID",
                "description": "Mengupdate data kategori berdasarkan ID yang diberikan.",
                "operationId": "2178a35b0a3147e58c607154e730a20b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID kategori",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data kategori yang akan diperbarui",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_kategori"
                                ],
                                "properties": {
                                    "nama_kategori": {
                                        "description": "Nama kategori",
                                        "type": "string",
                                        "example": "Elektronik"
                                    },
                                    "deskripsi_kategori": {
                                        "description": "Deskripsi kategori",
                                        "type": "string",
                                        "example": "Kategori untuk produk elektronik"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Kategori berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "123e4567-e89b-12d3-a456-426614174000"
                                        },
                                        "nama_kategori": {
                                            "type": "string",
                                            "example": "Elektronik"
                                        },
                                        "deskripsi_kategori": {
                                            "type": "string",
                                            "example": "Kategori untuk produk elektronik"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-25T10:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Data tidak valid atau format salah",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "nama_kategori": [
                                                    "Nama kategori wajib diisi"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kategori tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Kategori"
                ],
                "summary": "Menghapus kategori berdasarkan ID",
                "description": "Menghapus kategori berdasarkan ID yang diberikan.",
                "operationId": "8dd614ee030cb3a4eb0cc1d4ad3131bd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID kategori yang akan dihapus",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kategori berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kategori tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/keranjang-offline": {
            "get": {
                "tags": [
                    "Keranjang Offline"
                ],
                "summary": "Ambil data keranjang offline pengguna yang sedang login",
                "description": "Mengambil data keranjang offline termasuk item dan detail produk berdasarkan user yang sedang login.",
                "operationId": "6f3e0c75c0e283ec4f6d8b5e5e01b179",
                "responses": {
                    "200": {
                        "description": "Data keranjang offline berhasil ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data keranjang offline berhasil ditemukan"
                                        },
                                        "keranjang_offline": {
                                            "properties": {
                                                "keranjang_offline_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "13a2231c-5190-4f4d-bff2-9ee9cdcd6a32"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "2ee7ef07-430c-4049-9b07-eb29550f1cb1"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-28T08:12:09.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-28T08:12:09.000000Z"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "item_keranjang_offline_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "dd0681f8-c767-49e1-8df7-d24bf3be338d"
                                                            },
                                                            "keranjang_offline_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "13a2231c-5190-4f4d-bff2-9ee9cdcd6a32"
                                                            },
                                                            "produk_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                            },
                                                            "kuantitas": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "harga_satuan": {
                                                                "type": "string",
                                                                "example": "10000.00"
                                                            },
                                                            "subtotal": {
                                                                "type": "string",
                                                                "example": "30000.00"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-29T06:50:49.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-29T06:50:49.000000Z"
                                                            },
                                                            "produk": {
                                                                "properties": {
                                                                    "produk_id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                                    },
                                                                    "kategori_id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "b5b8abb7-8ab7-4407-96d6-2ca680d8b3ae"
                                                                    },
                                                                    "nama_produk": {
                                                                        "type": "string",
                                                                        "example": "Pupuk Gold"
                                                                    },
                                                                    "merk": {
                                                                        "type": "string",
                                                                        "example": "Gopupuk"
                                                                    },
                                                                    "deskripsi_produk": {
                                                                        "type": "string",
                                                                        "example": "Pupuk bagus"
                                                                    },
                                                                    "berat": {
                                                                        "type": "string",
                                                                        "example": "10.00"
                                                                    },
                                                                    "harga_satuan": {
                                                                        "type": "string",
                                                                        "example": "10000.00"
                                                                    },
                                                                    "stok": {
                                                                        "type": "integer",
                                                                        "example": 9
                                                                    },
                                                                    "status_produk": {
                                                                        "type": "string",
                                                                        "example": "aktif"
                                                                    },
                                                                    "gambar": {
                                                                        "type": "string",
                                                                        "example": "storage/produk/oGxYL72YiUgZjRwVBQruQqIn8p2JaN60A64ZiqLY.png"
                                                                    },
                                                                    "promo_id": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-11-27T09:26:27.000000Z"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-11-27T09:26:27.000000Z"
                                                                    },
                                                                    "deleted_at": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "after_diskon": {
                                                                        "type": "string",
                                                                        "example": "10000.00"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Keranjang offline tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Keranjang offline tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/keranjang-offline/add": {
            "post": {
                "tags": [
                    "Keranjang Offline"
                ],
                "summary": "Tambahkan produk ke keranjang offline",
                "description": "Menambahkan item ke keranjang offline berdasarkan user yang sedang login.",
                "operationId": "1a679f8e1b26a1ef92dfd05ad83cb50d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "produk_id",
                                    "kuantitas"
                                ],
                                "properties": {
                                    "produk_id": {
                                        "description": "ID produk yang akan ditambahkan ke keranjang",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                    },
                                    "kuantitas": {
                                        "description": "Jumlah produk yang ditambahkan",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Produk berhasil ditambahkan ke keranjang",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Produk berhasil ditambahkan ke keranjang"
                                        },
                                        "item": {
                                            "properties": {
                                                "item_keranjang_offline_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "dd0681f8-c767-49e1-8df7-d24bf3be338d"
                                                },
                                                "keranjang_offline_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "13a2231c-5190-4f4d-bff2-9ee9cdcd6a32"
                                                },
                                                "produk_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                },
                                                "kuantitas": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "harga_satuan": {
                                                    "type": "string",
                                                    "example": "10000.00"
                                                },
                                                "subtotal": {
                                                    "type": "string",
                                                    "example": "30000.00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-29T06:50:49.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-29T06:50:49.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validasi gagal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "produk_id": [
                                                    "Produk ID tidak ditemukan"
                                                ],
                                                "kuantitas": [
                                                    "Kuantitas harus minimal 1"
                                                ]
                                            },
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/keranjang-offline/{id}": {
            "delete": {
                "tags": [
                    "Keranjang Offline"
                ],
                "summary": "Hapus item dari keranjang offline",
                "description": "Menghapus item dari keranjang offline berdasarkan ID item.",
                "operationId": "b5b5a027b0ebac3cc9d131d78d46b371",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID item keranjang yang akan dihapus",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "dd0681f8-c767-49e1-8df7-d24bf3be338d"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item berhasil dihapus dari keranjang",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item berhasil dihapus dari keranjang."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Item tidak ditemukan."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan saat menghapus item dari keranjang."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nota": {
            "get": {
                "tags": [
                    "Nota Belanja"
                ],
                "summary": "Ambil semua item nota belanja",
                "description": "Mengambil semua data item nota belanja beserta relasi ke produk.",
                "operationId": "016ce5eb19ce9b2d2fdab4575a4b5264",
                "responses": {
                    "200": {
                        "description": "Data berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data berhasil diambil."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "item_nota_belanja_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "018f6d2b-f92b-4f00-bf74-9c39d6cc55a8"
                                                    },
                                                    "nota_belanja_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "a6dcea51-15f3-4eb5-b38e-47cd67e8f30f"
                                                    },
                                                    "produk_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                    },
                                                    "kuantitas": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "harga_satuan": {
                                                        "type": "string",
                                                        "example": "10000.00"
                                                    },
                                                    "subtotal": {
                                                        "type": "string",
                                                        "example": "10000.00"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-12-01T08:41:11.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-12-01T08:41:11.000000Z"
                                                    },
                                                    "produk": {
                                                        "properties": {
                                                            "produk_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                            },
                                                            "kategori_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "b5b8abb7-8ab7-4407-96d6-2ca680d8b3ae"
                                                            },
                                                            "nama_produk": {
                                                                "type": "string",
                                                                "example": "Pupuk Gold"
                                                            },
                                                            "merk": {
                                                                "type": "string",
                                                                "example": "Gopupuk"
                                                            },
                                                            "deskripsi_produk": {
                                                                "type": "string",
                                                                "example": "Pupuk bagus"
                                                            },
                                                            "berat": {
                                                                "type": "string",
                                                                "example": "10.00"
                                                            },
                                                            "harga_satuan": {
                                                                "type": "string",
                                                                "example": "10000.00"
                                                            },
                                                            "stok": {
                                                                "type": "integer",
                                                                "example": 9
                                                            },
                                                            "status_produk": {
                                                                "type": "string",
                                                                "example": "aktif"
                                                            },
                                                            "gambar": {
                                                                "type": "string",
                                                                "example": "storage/produk/oGxYL72YiUgZjRwVBQruQqIn8p2JaN60A64ZiqLY.png"
                                                            },
                                                            "promo_id": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-11-27T09:26:27.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-11-27T09:26:27.000000Z"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "after_diskon": {
                                                                "type": "string",
                                                                "example": "10000.00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan saat mengambil data."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Deskripsi error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/item-nota/{id}": {
            "get": {
                "tags": [
                    "Nota Belanja"
                ],
                "summary": "Ambil item nota belanja berdasarkan ID",
                "description": "Mengambil data item nota belanja berdasarkan ID beserta relasi ke produk.",
                "operationId": "297f535d3c205f1130a299feb68a8a8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID dari item nota belanja",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "018f6d2b-f92b-4f00-bf74-9c39d6cc55a8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data berhasil diambil."
                                        },
                                        "data": {
                                            "properties": {
                                                "item_nota_belanja_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "018f6d2b-f92b-4f00-bf74-9c39d6cc55a8"
                                                },
                                                "nota_belanja_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "a6dcea51-15f3-4eb5-b38e-47cd67e8f30f"
                                                },
                                                "produk_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                },
                                                "kuantitas": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "harga_satuan": {
                                                    "type": "string",
                                                    "example": "10000.00"
                                                },
                                                "subtotal": {
                                                    "type": "string",
                                                    "example": "10000.00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T08:41:11.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T08:41:11.000000Z"
                                                },
                                                "produk": {
                                                    "properties": {
                                                        "produk_id": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                        },
                                                        "kategori_id": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "b5b8abb7-8ab7-4407-96d6-2ca680d8b3ae"
                                                        },
                                                        "nama_produk": {
                                                            "type": "string",
                                                            "example": "Pupuk Gold"
                                                        },
                                                        "merk": {
                                                            "type": "string",
                                                            "example": "Gopupuk"
                                                        },
                                                        "deskripsi_produk": {
                                                            "type": "string",
                                                            "example": "Pupuk bagus"
                                                        },
                                                        "berat": {
                                                            "type": "string",
                                                            "example": "10.00"
                                                        },
                                                        "harga_satuan": {
                                                            "type": "string",
                                                            "example": "10000.00"
                                                        },
                                                        "stok": {
                                                            "type": "integer",
                                                            "example": 9
                                                        },
                                                        "status_produk": {
                                                            "type": "string",
                                                            "example": "aktif"
                                                        },
                                                        "gambar": {
                                                            "type": "string",
                                                            "example": "storage/produk/oGxYL72YiUgZjRwVBQruQqIn8p2JaN60A64ZiqLY.png"
                                                        },
                                                        "promo_id": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2024-11-27T09:26:27.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2024-11-27T09:26:27.000000Z"
                                                        },
                                                        "deleted_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "after_diskon": {
                                                            "type": "string",
                                                            "example": "10000.00"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data tidak ditemukan."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan saat mengambil data."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Deskripsi error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/post-nota": {
            "post": {
                "tags": [
                    "Nota Belanja"
                ],
                "summary": "Checkout multiple items in the cart",
                "description": "Proses checkout untuk beberapa item di keranjang offline, membuat nota belanja baru, dan menghapus item yang telah diproses dari keranjang.",
                "operationId": "b726e21a4d3c7ac89d45ef7ab8b96e9c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "item_keranjang_offline_id"
                                ],
                                "properties": {
                                    "item_keranjang_offline_id": {
                                        "description": "Array berisi ID item keranjang offline yang akan di-checkout",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "bd91a7ff-42d6-4a16-b40f-3e1a16f0d978"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout berhasil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Checkout berhasil"
                                        },
                                        "nota_belanja": {
                                            "properties": {
                                                "nota_belanja_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "f2b1f5e3-8e49-4b6b-90fa-3b90a5b1b6f8"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "d5f4a31f-986f-4d62-8764-e3db7c2bf0fa"
                                                },
                                                "total_harga": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25000
                                                },
                                                "keranjang_offline_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "c0b3a74b-29e8-41b7-967b-9c65bc123a6f"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T09:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T09:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "item_nota_belanja_ids": {
                                            "description": "Array ID item nota belanja yang berhasil dibuat",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "d4c7e9a4-fb84-4f2b-8b4d-d97e4b3e8b6d"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Format item_keranjang_offline_id tidak valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Format item_keranjang_offline_id tidak valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Keranjang tidak ditemukan atau kosong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Keranjang tidak ditemukan atau kosong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Kesalahan validasi input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The item_keranjang_offline_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan saat memproses checkout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/keranjang-offline/checkout": {
            "post": {
                "tags": [
                    "Nota Belanja"
                ],
                "summary": "Checkout keranjang offline",
                "description": "Memproses checkout keranjang offline user, membuat nota belanja baru, memindahkan item ke nota belanja, dan menghapus keranjang offline.",
                "operationId": "e6a2fe16b34ac529a966abec379cc5c2",
                "responses": {
                    "200": {
                        "description": "Checkout berhasil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Checkout berhasil"
                                        },
                                        "nota_belanja": {
                                            "properties": {
                                                "nota_belanja_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "f2b1f5e3-8e49-4b6b-90fa-3b90a5b1b6f8"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "d5f4a31f-986f-4d62-8764-e3db7c2bf0fa"
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25000
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T09:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-12-01T09:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Keranjang kosong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Keranjang kosong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token JWT tidak valid atau tidak ada",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/log-activity": {
            "get": {
                "tags": [
                    "Log Aktivitas"
                ],
                "summary": "Menampilkan semua log aktivitas",
                "description": "Menampilkan daftar semua log aktivitas yang ada, dengan informasi terkait pengguna.",
                "operationId": "73e9e987837bcb8d8915553ab231e88d",
                "responses": {
                    "200": {
                        "description": "Daftar log aktivitas berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LogAktivitas"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/log-activity/search": {
            "post": {
                "tags": [
                    "Log Aktivitas"
                ],
                "summary": "Cari log aktivitas",
                "description": "Melakukan pencarian log aktivitas berdasarkan nama user atau jenis aktivitas, dengan pagination.",
                "operationId": "0f9672ba582d4fef0a92837b5cd8839b",
                "parameters": [
                    {
                        "name": "nama",
                        "in": "query",
                        "description": "Nama user yang ingin dicari (opsional).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Riana"
                        }
                    },
                    {
                        "name": "aktivitas",
                        "in": "query",
                        "description": "Jenis aktivitas yang ingin dicari (opsional).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "auth.logout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hasil pencarian log aktivitas.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "log_aktivitas_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "ba5bcad1-3b9f-4716-807b-8349c779ead1"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "b21e39c3-e00d-414f-8d55-01b87602c587"
                                                    },
                                                    "aktivitas": {
                                                        "type": "string",
                                                        "example": "auth.logout"
                                                    },
                                                    "tgl_aktivitas": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-12-01 18:53:21"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "b21e39c3-e00d-414f-8d55-01b87602c587"
                                                            },
                                                            "nama": {
                                                                "type": "string",
                                                                "example": "Riana"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "kimriana@yahoo.com"
                                                            },
                                                            "no_tlp": {
                                                                "type": "string",
                                                                "example": "081234567890"
                                                            },
                                                            "is_verified": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "foto": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-11-20T03:03:49.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-12-01T11:52:32.000000Z"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "kasir"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validasi gagal.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validasi gagal pada parameter."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token JWT tidak valid atau tidak ada.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logs/user/{userId}": {
            "get": {
                "tags": [
                    "Log Aktivitas"
                ],
                "summary": "Menampilkan log aktivitas berdasarkan user_id",
                "description": "Menampilkan log aktivitas berdasarkan ID pengguna tertentu.",
                "operationId": "841b0257d6602aa043c9413447f56bc8",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID pengguna untuk mendapatkan log aktivitas terkait",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log aktivitas berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LogAktivitas"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log aktivitas tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Log not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/log-detail/{logId}": {
            "get": {
                "tags": [
                    "Log Aktivitas"
                ],
                "summary": "Menampilkan detail log aktivitas",
                "description": "Menampilkan detail dari satu log aktivitas berdasarkan log ID.",
                "operationId": "e5952d12ec76505b1f5b6417280a0416",
                "parameters": [
                    {
                        "name": "logId",
                        "in": "path",
                        "description": "ID log aktivitas untuk mendapatkan detail log",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail log aktivitas berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogAktivitas"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log aktivitas tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Log not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Menampilkan notifikasi untuk pengguna yang sedang login",
                "description": "Pengguna yang sudah login dapat melihat daftar notifikasi yang relevan dengan mereka.",
                "operationId": "911565ad9aff9ba7eded3f189509e578",
                "responses": {
                    "200": {
                        "description": "Daftar notifikasi berhasil diambil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token tidak valid atau tidak ada token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Menyimpan notifikasi baru untuk semua pengguna yang sudah terverifikasi",
                "description": "Membuat notifikasi baru untuk semua pengguna yang sudah terverifikasi.",
                "operationId": "91f8e779a9e46cb5cdda969e5a928a94",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "Pesan notifikasi yang akan dikirim",
                                        "type": "string",
                                        "example": "Selamat datang di aplikasi kami!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notifikasi berhasil dibuat untuk semua pengguna yang sudah terverifikasi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications created for all verified users"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input tidak valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Message is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/{id}/read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Menandai notifikasi sebagai dibaca",
                "description": "Menandai status notifikasi menjadi 'read' hanya untuk pengguna yang terautentikasi.",
                "operationId": "14ca05f271f4c57f1f368b868ab34446",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID notifikasi yang akan ditandai sebagai dibaca",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifikasi berhasil ditandai sebagai dibaca",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Akses tidak sah, pengguna tidak berhak menandai notifikasi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notifikasi tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Notification not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Mengambil daftar order",
                "operationId": "getOrders",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Membuat order baru",
                "operationId": "createOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "item_keranjang_id"
                                ],
                                "properties": {
                                    "item_keranjang_id": {
                                        "description": "Array of item keranjang UUIDs to include in the order",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "kode_voucher": {
                                        "description": "Optional promo code to apply for the order",
                                        "type": "string",
                                        "example": "SUMMER2024"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order and transaction created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "": {
                                                    "$ref": "#/components/schemas/Order"
                                                },
                                                "total_bayar": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120000
                                                },
                                                "promo_applied": {
                                                    "type": "string",
                                                    "example": "SUMMER2024",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No valid items found for this order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders-search": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Cari Order Berdasarkan Order ID",
                "description": "Melakukan pencarian order berdasarkan Order ID, termasuk data user dan detail produk yang terkait.",
                "operationId": "7be91347182d2228ded73edf164dec8f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "fcf57f40-7bdd-4e4b-9d2b-c1bd7120d6c8"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order ditemukan.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order found successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "fcf57f40-7bdd-4e4b-9d2b-c1bd7120d6c8"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "2ee7ef07-430c-4049-9b07-eb29550f1cb1"
                                                },
                                                "tgl_order": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-11-28"
                                                },
                                                "status_order": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-28T07:24:35.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-28T07:24:35.000000Z"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "user": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "2ee7ef07-430c-4049-9b07-eb29550f1cb1"
                                                        },
                                                        "nama": {
                                                            "type": "string",
                                                            "example": "riana"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "email@gmail.com"
                                                        },
                                                        "no_tlp": {
                                                            "type": "string",
                                                            "example": "12345678923"
                                                        },
                                                        "is_verified": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "foto": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2024-11-25T07:04:43.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2024-11-29T14:58:01.000000Z"
                                                        },
                                                        "deleted_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "customer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "produk_items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "produk_item_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "75659919-3a12-4c2c-a219-32c212ba2241"
                                                            },
                                                            "order_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "fcf57f40-7bdd-4e4b-9d2b-c1bd7120d6c8"
                                                            },
                                                            "produk_id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "29398d11-f66e-4378-9a31-d91c46966533"
                                                            },
                                                            "kuantitas": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "harga_satuan": {
                                                                "type": "string",
                                                                "format": "decimal",
                                                                "example": "79500.00"
                                                            },
                                                            "subtotal": {
                                                                "type": "string",
                                                                "format": "decimal",
                                                                "example": "159000.00"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-11-28T07:24:35.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-11-28T07:24:35.000000Z"
                                                            },
                                                            "produk": {
                                                                "properties": {
                                                                    "produk_id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "29398d11-f66e-4378-9a31-d91c46966533"
                                                                    },
                                                                    "kategori_id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "b5b8abb7-8ab7-4407-96d6-2ca680d8b3ae"
                                                                    },
                                                                    "nama_produk": {
                                                                        "type": "string",
                                                                        "example": "Produk Bagus"
                                                                    },
                                                                    "merk": {
                                                                        "type": "string",
                                                                        "example": "Merk Bagus"
                                                                    },
                                                                    "deskripsi_produk": {
                                                                        "type": "string",
                                                                        "example": "Ini adalah deskripsi produk contoh."
                                                                    },
                                                                    "berat": {
                                                                        "type": "string",
                                                                        "format": "decimal",
                                                                        "example": "1.50"
                                                                    },
                                                                    "harga_satuan": {
                                                                        "type": "string",
                                                                        "format": "decimal",
                                                                        "example": "100000.00"
                                                                    },
                                                                    "stok": {
                                                                        "type": "integer",
                                                                        "example": 48
                                                                    },
                                                                    "status_produk": {
                                                                        "type": "string",
                                                                        "example": "aktif"
                                                                    },
                                                                    "gambar": {
                                                                        "type": "string",
                                                                        "example": "storage/image.jpg"
                                                                    },
                                                                    "promo_id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "2328a556-6e99-47f6-8370-7ac9f8b663cf"
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2024-11-27T09:05:21.000000Z"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2024-12-01T10:16:25.000000Z"
                                                                    },
                                                                    "deleted_at": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "after_diskon": {
                                                                        "type": "string",
                                                                        "format": "decimal",
                                                                        "example": "100000.00"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parameter Order ID tidak ditemukan.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order ID is required for search"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order tidak ditemukan.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Mengambil detail order",
                "operationId": "getOrderDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Mengupdate status order (kasir)",
                "description": "Kasir dapat mengupdate status order. Status yang valid: pending, proses, selesai, batal.",
                "operationId": "6a7029f5510ca08e28a2d58a5fe19439",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID order yang ingin diperbarui",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status_order"
                                ],
                                "properties": {
                                    "status_order": {
                                        "description": "Status order yang baru",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "proses",
                                            "selesai",
                                            "batal"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order berhasil diupdate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input tidak valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Akses tidak sah",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Menghapus order (kasir)",
                "description": "Kasir dapat menghapus order yang ada.",
                "operationId": "303a7b797887b66c7790c4c187b54790",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID order yang ingin dihapus",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Akses tidak sah",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get All Products",
                "description": "Retrieve all products",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a Product",
                "description": "Create a new product",
                "operationId": "createProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "kategori_id",
                                    "nama_produk",
                                    "berat",
                                    "harga_satuan",
                                    "stok",
                                    "status_produk"
                                ],
                                "properties": {
                                    "kategori_id": {
                                        "description": "Category ID",
                                        "type": "integer"
                                    },
                                    "nama_produk": {
                                        "description": "Product name",
                                        "type": "string"
                                    },
                                    "merk": {
                                        "description": "Product brand",
                                        "type": "string"
                                    },
                                    "deskripsi_produk": {
                                        "description": "Product description",
                                        "type": "string"
                                    },
                                    "berat": {
                                        "description": "Product weight",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "harga_satuan": {
                                        "description": "Unit price",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "stok": {
                                        "description": "Product stock",
                                        "type": "integer"
                                    },
                                    "status_produk": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "aktif",
                                            "nonaktif"
                                        ]
                                    },
                                    "gambar": {
                                        "description": "Product image URL",
                                        "type": "string"
                                    },
                                    "promo_id": {
                                        "description": "Promo ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/search-products": {
            "post": {
                "tags": [
                    "Produk"
                ],
                "summary": "Cari produk berdasarkan nama",
                "description": "Endpoint untuk mencari produk berdasarkan nama produk dengan pencocokan sebagian (like query).",
                "operationId": "06119f4ccf3c98258ccfcedf1efa54ec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nama_produk": {
                                        "description": "Nama produk yang ingin dicari",
                                        "type": "string",
                                        "example": "Pupuk"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Daftar produk yang cocok dengan pencarian",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "produk_id": {
                                                        "type": "string",
                                                        "example": "2263d2bb-1834-4649-bf76-699eae6033f2"
                                                    },
                                                    "kategori_id": {
                                                        "type": "string",
                                                        "example": "b5b8abb7-8ab7-4407-96d6-2ca680d8b3ae"
                                                    },
                                                    "nama_produk": {
                                                        "type": "string",
                                                        "example": "Pupuk Gold"
                                                    },
                                                    "merk": {
                                                        "type": "string",
                                                        "example": "Gopupuk"
                                                    },
                                                    "deskripsi_produk": {
                                                        "type": "string",
                                                        "example": "Pupuk bagus"
                                                    },
                                                    "berat": {
                                                        "type": "string",
                                                        "example": "10.00"
                                                    },
                                                    "harga_satuan": {
                                                        "type": "string",
                                                        "example": "10000.00"
                                                    },
                                                    "stok": {
                                                        "type": "integer",
                                                        "example": 9
                                                    },
                                                    "status_produk": {
                                                        "type": "string",
                                                        "example": "aktif"
                                                    },
                                                    "gambar": {
                                                        "type": "string",
                                                        "example": "storage/produk/oGxYL72YiUgZjRwVBQruQqIn8p2JaN60A64ZiqLY.png"
                                                    },
                                                    "promo_id": {
                                                        "type": "string",
                                                        "example": null
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-27T09:26:27.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-27T09:26:27.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": null
                                                    },
                                                    "after_diskon": {
                                                        "type": "string",
                                                        "example": "10000.00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produk tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No products found with the given name."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Kesalahan validasi input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The nama_produk field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: [error details]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Product by ID",
                "description": "Retrieve a product by its ID",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a Product",
                "description": "Update an existing product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "kategori_id": {
                                        "description": "Category ID",
                                        "type": "integer"
                                    },
                                    "nama_produk": {
                                        "description": "Product name",
                                        "type": "string"
                                    },
                                    "merk": {
                                        "description": "Product brand",
                                        "type": "string"
                                    },
                                    "deskripsi_produk": {
                                        "description": "Product description",
                                        "type": "string"
                                    },
                                    "berat": {
                                        "description": "Product weight",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "harga_satuan": {
                                        "description": "Unit price",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "stok": {
                                        "description": "Product stock",
                                        "type": "integer"
                                    },
                                    "status_produk": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "aktif",
                                            "nonaktif"
                                        ]
                                    },
                                    "gambar": {
                                        "description": "Product image URL",
                                        "type": "string"
                                    },
                                    "promo_id": {
                                        "description": "Promo ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Product",
                "description": "Delete a product by ID",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promo": {
            "get": {
                "tags": [
                    "Promo"
                ],
                "summary": "Get list of promos",
                "operationId": "319daa494b57ce32cbb27cbac48d9a75",
                "responses": {
                    "200": {
                        "description": "List of promos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Promo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Promo"
                ],
                "summary": "Create a new promo",
                "operationId": "cfa839cd6d18f811800d4a7bf7ed4640",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_promo",
                                    "jenis_promo",
                                    "nilai_promo",
                                    "tgl_mulai",
                                    "tgl_berakhir"
                                ],
                                "properties": {
                                    "nama_promo": {
                                        "type": "string"
                                    },
                                    "jenis_promo": {
                                        "type": "string",
                                        "enum": [
                                            "diskon",
                                            "voucher"
                                        ]
                                    },
                                    "nilai_promo": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "tgl_mulai": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "tgl_berakhir": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "kode_voucher": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Promo created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promo/{id}": {
            "get": {
                "tags": [
                    "Promo"
                ],
                "summary": "Get a promo by ID",
                "operationId": "70f00fb16c5e48b01e0dea4b283ae45f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Promo ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promo details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promo not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Promo"
                ],
                "summary": "Update a promo",
                "operationId": "0055529e83b7389da39222f744ac0d7a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Promo ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_promo",
                                    "jenis_promo",
                                    "nilai_promo",
                                    "tgl_mulai",
                                    "tgl_berakhir"
                                ],
                                "properties": {
                                    "nama_promo": {
                                        "type": "string"
                                    },
                                    "jenis_promo": {
                                        "type": "string",
                                        "enum": [
                                            "diskon",
                                            "voucher"
                                        ]
                                    },
                                    "nilai_promo": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "tgl_mulai": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "tgl_berakhir": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "kode_voucher": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo updated"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Promo not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Promo"
                ],
                "summary": "Delete a promo",
                "operationId": "11c864d27aa152e9deef2fc3e6ab762b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Promo ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promo deleted"
                    },
                    "404": {
                        "description": "Promo not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get All Reviews",
                "description": "Retrieve all reviews for all products",
                "operationId": "getAllReviews",
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a Review",
                "description": "Create a review for a product",
                "operationId": "storeReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "produk_id",
                                    "content",
                                    "rating"
                                ],
                                "properties": {
                                    "produk_id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                    },
                                    "content": {
                                        "description": "Review content",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Rating (1-5)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{produk_id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get Reviews by Product ID",
                "description": "Retrieve reviews for a specific product",
                "operationId": "getReviewsByProduct",
                "parameters": [
                    {
                        "name": "produk_id",
                        "in": "path",
                        "description": "The product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{id}": {
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a Review",
                "description": "Update an existing review by ID",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "rating"
                                ],
                                "properties": {
                                    "content": {
                                        "description": "Updated review content",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Updated rating (1-5)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a Review",
                "description": "Delete a review by ID",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully"
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get all roles with permissions",
                "operationId": "56499f13ff46ba5f29d2a4f9d9bd8c93",
                "responses": {
                    "200": {
                        "description": "List of roles with permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role with permissions",
                "operationId": "4a563842fbfcad237f63da43065fca3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "edit-users",
                                            "delete-posts"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get a role by ID with permissions",
                "operationId": "7fb0667a295b7678a30353aa11739683",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role with permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role with permissions",
                "operationId": "786d6990093a8eb3a56931f19a827e43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "edit-users",
                                            "delete-posts"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role by ID",
                "operationId": "8285c46981c60ad600aa4077307aec04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}/permissions": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Assign permissions to a role",
                "operationId": "03ba3a09f518643111458e4d77c7286f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions updated successfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}/add-permissions": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Add permissions to a role",
                "operationId": "5d1f0e14158d254e21b4c63f9627fa95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions added to the role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions added successfully to the role"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/report": {
            "get": {
                "tags": [
                    "Sales Report"
                ],
                "summary": "Get all sales reports",
                "operationId": "d9d9a179b42939d38e1dc30518409dc3",
                "responses": {
                    "200": {
                        "description": "Sales report generated for all data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "report": {
                                            "properties": {
                                                "total_sales": {
                                                    "type": "integer"
                                                },
                                                "total_orders": {
                                                    "type": "integer"
                                                },
                                                "total_payment": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sales Report"
                ],
                "summary": "Generate sales report within date range",
                "operationId": "ef55e68aa14b7f9e2aeddff42340df7c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sales report generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "report": {
                                            "properties": {
                                                "total_sales": {
                                                    "type": "integer"
                                                },
                                                "total_orders": {
                                                    "type": "integer"
                                                },
                                                "total_payment": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/report-offline": {
            "get": {
                "tags": [
                    "Laporan Penjualan Offline"
                ],
                "summary": "Generate laporan penjualan offline",
                "description": "Endpoint ini menghasilkan laporan penjualan offline berdasarkan data item nota belanja.",
                "operationId": "3e387cc92d6cf0fd8340c1632b554a91",
                "responses": {
                    "200": {
                        "description": "Laporan penjualan berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales report generated successfully"
                                        },
                                        "report": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "9a8967ff-6464-48db-ba2d-95e52acfbb73"
                                                },
                                                "total_sales": {
                                                    "type": "integer",
                                                    "example": 21
                                                },
                                                "total_payment": {
                                                    "type": "string",
                                                    "example": "408509.00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-01T13:53:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-01T13:53:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Kesalahan server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while generating the sales report."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get All Transactions",
                "description": "Retrieve all transactions (admin, kasir)",
                "operationId": "getTransactions",
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{order_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transaction by Order ID",
                "description": "Retrieve transaction details based on order ID",
                "operationId": "getTransactionByOrder",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "The order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{id}": {
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update Transaction Status",
                "description": "Update the payment status of a transaction",
                "operationId": "updateTransactionStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status_pembayaran"
                                ],
                                "properties": {
                                    "status_pembayaran": {
                                        "description": "Payment status",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "selesai",
                                            "batal"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, validation error"
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "401": {
                        "description": "Unauthorized, invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a list of users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama",
                                    "email",
                                    "password",
                                    "roles"
                                ],
                                "properties": {
                                    "nama": {
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "confirm-password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "admin"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users-search": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Search users by name",
                "description": "Mencari pengguna berdasarkan nama. Jika parameter `name` tidak diberikan, maka akan mengembalikan semua pengguna.",
                "operationId": "2822f827b0715cc66a54795a7d777314",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Nama pengguna yang akan dicari",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Riana"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hasil pencarian pengguna",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "example": "d9b68e60-ad24-4599-9ca4-8840f921bb6e"
                                                            },
                                                            "nama": {
                                                                "type": "string",
                                                                "example": "Riana"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "riananur28@gmail.com"
                                                            },
                                                            "no_tlp": {
                                                                "type": "string",
                                                                "example": null
                                                            },
                                                            "is_verified": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "foto": {
                                                                "type": "string",
                                                                "example": null
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-24T13:31:41.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-24T13:34:53.000000Z"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "example": null
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "kasir"
                                                            },
                                                            "roles": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "kasir"
                                                                        },
                                                                        "guard_name": {
                                                                            "type": "string",
                                                                            "example": "api"
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "example": "2024-11-20T15:17:36.000000Z"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "example": "2024-11-21T10:18:13.000000Z"
                                                                        },
                                                                        "pivot": {
                                                                            "properties": {
                                                                                "model_id": {
                                                                                    "type": "string",
                                                                                    "example": "d9b68e60-ad24-4599-9ca4-8840f921bb6e"
                                                                                },
                                                                                "role_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name must be a string."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Update the details of an existing user. Requires JWT authentication.",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nama": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete an existing user",
                "description": "Delete a user by ID. Requires JWT authentication.",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "operationId": "8e7ba77d4e8409460b341c9273099998",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "operationId": "116515f53f0ecf2584e4a57a7e7db4ba",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nama": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "no_tlp": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "foto": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Role": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "admin"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "edit-users",
                            "delete-posts"
                        ]
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "user_id",
                    "nama",
                    "email",
                    "role"
                ],
                "properties": {
                    "user_id": {
                        "description": "The unique identifier for the user",
                        "type": "integer"
                    },
                    "nama": {
                        "description": "The name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string"
                    },
                    "role": {
                        "description": "The role of the user",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ItemKeranjang": {
                "required": [
                    "id",
                    "nama",
                    "harga",
                    "jumlah"
                ],
                "properties": {
                    "id": {
                        "description": "ID item keranjang",
                        "type": "integer"
                    },
                    "nama": {
                        "description": "Nama item keranjang",
                        "type": "string"
                    },
                    "harga": {
                        "description": "Harga per item",
                        "type": "number",
                        "format": "float"
                    },
                    "jumlah": {
                        "description": "Jumlah item keranjang",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Kategori": {
                "required": [
                    "kategori_id",
                    "nama_kategori"
                ],
                "properties": {
                    "kategori_id": {
                        "description": "ID kategori",
                        "type": "integer"
                    },
                    "nama_kategori": {
                        "description": "Nama kategori",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LogAktivitas": {
                "required": [
                    "log_id",
                    "user_id",
                    "action",
                    "timestamp"
                ],
                "properties": {
                    "log_id": {
                        "description": "ID of the log entry",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the user performing the action",
                        "type": "integer"
                    },
                    "action": {
                        "description": "Action performed by the user",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp of the action",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Review": {
                "required": [
                    "produk_id",
                    "user_id",
                    "content",
                    "rating"
                ],
                "properties": {
                    "produk_id": {
                        "description": "Product ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "content": {
                        "description": "Review content",
                        "type": "string"
                    },
                    "rating": {
                        "description": "Rating (1-5)",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "kategori_id",
                    "nama_produk",
                    "berat",
                    "harga_satuan",
                    "stok",
                    "status_produk"
                ],
                "properties": {
                    "produk_id": {
                        "description": "Product ID",
                        "type": "string"
                    },
                    "kategori_id": {
                        "description": "Category ID",
                        "type": "integer"
                    },
                    "nama_produk": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "merk": {
                        "description": "Product brand",
                        "type": "string"
                    },
                    "deskripsi_produk": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "berat": {
                        "description": "Product weight",
                        "type": "number",
                        "format": "float"
                    },
                    "harga_satuan": {
                        "description": "Unit price",
                        "type": "number",
                        "format": "float"
                    },
                    "stok": {
                        "description": "Product stock",
                        "type": "integer"
                    },
                    "status_produk": {
                        "description": "Product status",
                        "type": "string",
                        "enum": [
                            "aktif",
                            "nonaktif"
                        ]
                    },
                    "gambar": {
                        "description": "Product image URL",
                        "type": "string"
                    },
                    "promo_id": {
                        "description": "Promo ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "required": [
                    "id",
                    "user_id",
                    "message",
                    "timestamp"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the notification",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the user associated with the notification",
                        "type": "integer"
                    },
                    "message": {
                        "description": "The message content of the notification",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when the notification was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "id",
                    "user_id",
                    "total_price",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the order",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the user who placed the order",
                        "type": "integer"
                    },
                    "total_price": {
                        "description": "Total price of the order",
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "description": "Current status of the order",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Order creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Order last updated timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "required": [
                    "transaksi_id",
                    "order_id",
                    "status_pembayaran"
                ],
                "properties": {
                    "transaksi_id": {
                        "description": "The unique ID of the transaction",
                        "type": "integer"
                    },
                    "order_id": {
                        "description": "The order ID associated with the transaction",
                        "type": "integer"
                    },
                    "status_pembayaran": {
                        "description": "The payment status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "selesai",
                            "batal"
                        ]
                    },
                    "created_at": {
                        "description": "Timestamp when the transaction was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the transaction was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Address": {
                "required": [
                    "user_id",
                    "alamat",
                    "kota",
                    "provinsi",
                    "kecamatan",
                    "kelurahan",
                    "kode_pos"
                ],
                "properties": {
                    "user_id": {
                        "description": "The user ID",
                        "type": "integer"
                    },
                    "alamat": {
                        "description": "User's address",
                        "type": "string"
                    },
                    "kota": {
                        "description": "City",
                        "type": "string"
                    },
                    "provinsi": {
                        "description": "Province",
                        "type": "string"
                    },
                    "kecamatan": {
                        "description": "District",
                        "type": "string"
                    },
                    "kelurahan": {
                        "description": "Subdistrict",
                        "type": "string"
                    },
                    "kode_pos": {
                        "description": "Postal code",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Promo": {
                "required": [
                    "promo_id",
                    "nama_promo",
                    "jenis_promo",
                    "nilai_promo",
                    "tgl_mulai",
                    "tgl_berakhir"
                ],
                "properties": {
                    "promo_id": {
                        "description": "Unique ID of the promo",
                        "type": "string"
                    },
                    "nama_promo": {
                        "description": "Name of the promo",
                        "type": "string"
                    },
                    "jenis_promo": {
                        "description": "Type of the promo (e.g., 'diskon' or 'voucher')",
                        "type": "string"
                    },
                    "nilai_promo": {
                        "description": "Value of the promo (e.g., discount amount)",
                        "type": "number",
                        "format": "float"
                    },
                    "tgl_mulai": {
                        "description": "Start date of the promo",
                        "type": "string",
                        "format": "date"
                    },
                    "tgl_berakhir": {
                        "description": "End date of the promo",
                        "type": "string",
                        "format": "date"
                    },
                    "kode_voucher": {
                        "description": "Voucher code (if applicable)",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter 'Bearer {your_token}' to authenticate",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Address",
            "description": "Address"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Password Reset",
            "description": "Password Reset"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Kategori",
            "description": "Kategori"
        },
        {
            "name": "Keranjang Offline",
            "description": "Keranjang Offline"
        },
        {
            "name": "Nota Belanja",
            "description": "Nota Belanja"
        },
        {
            "name": "Log Aktivitas",
            "description": "Log Aktivitas"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Order",
            "description": "Order"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Produk",
            "description": "Produk"
        },
        {
            "name": "Promo",
            "description": "Promo"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "Role",
            "description": "Role"
        },
        {
            "name": "Sales Report",
            "description": "Sales Report"
        },
        {
            "name": "Laporan Penjualan Offline",
            "description": "Laporan Penjualan Offline"
        },
        {
            "name": "Transactions",
            "description": "Transactions"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}